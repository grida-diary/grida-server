plugins {
    id 'java-library'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
    asciidoctorExt
}

dependencies {
    // web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // rest docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // rest docs :mock mvc
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // module dependencies
    implementation project(':grida-apis:apis-core')
    implementation project(':grida-apis:apis-security')
    implementation project(':grida-domains:domain')
    runtimeOnly project(':grida-domains:domain-rds')
}

ext {
    snippetsDir = file('build/generated-snippets')
}

tasks.named('test') {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test

    forkOptions {
        jvmArgs '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED'
        jvmArgs '--add-opens', 'java.base/java.io=ALL-UNNAMED'
    }
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
    delete file("${asciidoctor.outputDir}")
}

clean {
    delete file('src/main/generated')
}

bootJar {
    enabled = true
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

jar {
    enabled = false
}

tasks.register("prepareKotlinBuildScriptModel"){}